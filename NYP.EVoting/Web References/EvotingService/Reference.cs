//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.34209.
// 
#pragma warning disable 1591

namespace NYP.EVoting.EvotingService {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="EVotingServiceSoap11Binding", Namespace="http://evoting.nyp.edu.sg/")]
    public partial class EVotingService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback fetchCandidatesOperationCompleted;
        
        private System.Threading.SendOrPostCallback recordVoteOperationCompleted;
        
        private System.Threading.SendOrPostCallback countVoteOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public EVotingService() {
            this.Url = global::NYP.EVoting.Properties.Settings.Default.NYP_EVoting_EvotingService_EVotingService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event fetchCandidatesCompletedEventHandler fetchCandidatesCompleted;
        
        /// <remarks/>
        public event recordVoteCompletedEventHandler recordVoteCompleted;
        
        /// <remarks/>
        public event countVoteCompletedEventHandler countVoteCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:fetchCandidates", RequestNamespace="http://evoting.nyp.edu.sg/xsd", ResponseNamespace="http://evoting.nyp.edu.sg/xsd", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", IsNullable=true)]
        public ConstituencyPartyMappingBean fetchCandidates([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string constituencyId) {
            object[] results = this.Invoke("fetchCandidates", new object[] {
                        constituencyId});
            return ((ConstituencyPartyMappingBean)(results[0]));
        }
        
        /// <remarks/>
        public void fetchCandidatesAsync(string constituencyId) {
            this.fetchCandidatesAsync(constituencyId, null);
        }
        
        /// <remarks/>
        public void fetchCandidatesAsync(string constituencyId, object userState) {
            if ((this.fetchCandidatesOperationCompleted == null)) {
                this.fetchCandidatesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnfetchCandidatesOperationCompleted);
            }
            this.InvokeAsync("fetchCandidates", new object[] {
                        constituencyId}, this.fetchCandidatesOperationCompleted, userState);
        }
        
        private void OnfetchCandidatesOperationCompleted(object arg) {
            if ((this.fetchCandidatesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.fetchCandidatesCompleted(this, new fetchCandidatesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:recordVote", RequestNamespace="http://evoting.nyp.edu.sg/xsd", OneWay=true, Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void recordVote([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] ConstituencyPartyMappingBean constituencyPartyMappingBean) {
            this.Invoke("recordVote", new object[] {
                        constituencyPartyMappingBean});
        }
        
        /// <remarks/>
        public void recordVoteAsync(ConstituencyPartyMappingBean constituencyPartyMappingBean) {
            this.recordVoteAsync(constituencyPartyMappingBean, null);
        }
        
        /// <remarks/>
        public void recordVoteAsync(ConstituencyPartyMappingBean constituencyPartyMappingBean, object userState) {
            if ((this.recordVoteOperationCompleted == null)) {
                this.recordVoteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnrecordVoteOperationCompleted);
            }
            this.InvokeAsync("recordVote", new object[] {
                        constituencyPartyMappingBean}, this.recordVoteOperationCompleted, userState);
        }
        
        private void OnrecordVoteOperationCompleted(object arg) {
            if ((this.recordVoteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.recordVoteCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:countVote", RequestNamespace="http://evoting.nyp.edu.sg/xsd", OneWay=true, Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void countVote() {
            this.Invoke("countVote", new object[0]);
        }
        
        /// <remarks/>
        public void countVoteAsync() {
            this.countVoteAsync(null);
        }
        
        /// <remarks/>
        public void countVoteAsync(object userState) {
            if ((this.countVoteOperationCompleted == null)) {
                this.countVoteOperationCompleted = new System.Threading.SendOrPostCallback(this.OncountVoteOperationCompleted);
            }
            this.InvokeAsync("countVote", new object[0], this.countVoteOperationCompleted, userState);
        }
        
        private void OncountVoteOperationCompleted(object arg) {
            if ((this.countVoteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.countVoteCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://beans.evoting.nyp.edu.sg/xsd")]
    public partial class ConstituencyPartyMappingBean {
        
        private string constituencyIdField;
        
        private string constituencyNameField;
        
        private PartyBean[] partyBeanField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string constituencyId {
            get {
                return this.constituencyIdField;
            }
            set {
                this.constituencyIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string constituencyName {
            get {
                return this.constituencyNameField;
            }
            set {
                this.constituencyNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("partyBean", IsNullable=true)]
        public PartyBean[] partyBean {
            get {
                return this.partyBeanField;
            }
            set {
                this.partyBeanField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://beans.evoting.nyp.edu.sg/xsd")]
    public partial class PartyBean {
        
        private System.Nullable<int> constituencyPartyMappingidField;
        
        private bool constituencyPartyMappingidFieldSpecified;
        
        private System.Nullable<System.DateTime> dateOfInceptionField;
        
        private bool dateOfInceptionFieldSpecified;
        
        private string partyIdField;
        
        private string partyNameField;
        
        private byte[] partySymbolField;
        
        private System.Nullable<bool> selectedField;
        
        private bool selectedFieldSpecified;
        
        private string statusField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> constituencyPartyMappingid {
            get {
                return this.constituencyPartyMappingidField;
            }
            set {
                this.constituencyPartyMappingidField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool constituencyPartyMappingidSpecified {
            get {
                return this.constituencyPartyMappingidFieldSpecified;
            }
            set {
                this.constituencyPartyMappingidFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="date", IsNullable=true)]
        public System.Nullable<System.DateTime> dateOfInception {
            get {
                return this.dateOfInceptionField;
            }
            set {
                this.dateOfInceptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool dateOfInceptionSpecified {
            get {
                return this.dateOfInceptionFieldSpecified;
            }
            set {
                this.dateOfInceptionFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string partyId {
            get {
                return this.partyIdField;
            }
            set {
                this.partyIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string partyName {
            get {
                return this.partyNameField;
            }
            set {
                this.partyNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary", IsNullable=true)]
        public byte[] partySymbol {
            get {
                return this.partySymbolField;
            }
            set {
                this.partySymbolField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<bool> selected {
            get {
                return this.selectedField;
            }
            set {
                this.selectedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool selectedSpecified {
            get {
                return this.selectedFieldSpecified;
            }
            set {
                this.selectedFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void fetchCandidatesCompletedEventHandler(object sender, fetchCandidatesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class fetchCandidatesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal fetchCandidatesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ConstituencyPartyMappingBean Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ConstituencyPartyMappingBean)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void recordVoteCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void countVoteCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
}

#pragma warning restore 1591